name: Deploy Telegram Bot

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Проверка кода
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Шаг 3: Сборка проекта с Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Шаг 4: Установка Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Шаг 5: Установка переменных окружения из .env
      - name: Load .env file
        run: |
          if grep -q '^BOT_TOKEN=' .env; then
            BOT_TOKEN_VALUE=$(grep '^BOT_TOKEN=' .env | cut -d '=' -f2-)
            if [ -n "$BOT_TOKEN_VALUE" ]; then
              echo "BOT_TOKEN=$BOT_TOKEN_VALUE" >> $GITHUB_ENV
            fi
          fi
          if grep -q '^BOT_NAME=' .env; then
            BOT_NAME_VALUE=$(grep '^BOT_NAME=' .env | cut -d '=' -f2-)
            if [ -n "$BOT_NAME_VALUE" ]; then
              echo "BOT_NAME=$BOT_NAME_VALUE" >> $GITHUB_ENV
            fi
          fi

      # Шаг 6: Деплой на удаленный сервер
      - name: Deploy to server
        env:
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

          # Проверка подключения
          echo "Testing SSH connection..."
          ssh -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_HOST "echo 'SSH connection successful!'"

          # Проверка Docker
          echo "Checking Docker..."
          ssh -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_HOST "docker --version"

          # Установка Docker Compose (если не установлен)
          echo "Installing Docker Compose..."
          ssh -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_HOST << 'EOF'
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          EOF

          # Деплой
          echo "Deploying..."
          ssh -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_HOST << 'EOF'
          cd /home/belnitskii/TelegramBotCB
          docker-compose down || true
          docker-compose up -d --build
          EOF